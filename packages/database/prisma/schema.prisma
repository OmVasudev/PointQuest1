// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Student {
	id String @id @default(uuid())
	firstName String
	lastName String
	email String @unique
	password String
	phoneNo String
	branch String
	USN String @unique
	points Int @default(0)
	passingYear String
	activityName String?
	clubName String?
	date DateTime?

	participants Participation[]
}

model Admin {
	id String @id @default(uuid())
	firstName String
	lastName String
	email String @unique
	password String
	phoneNo String
	branch String
	USN String @unique
}

model BOD {
	id String @id @default(uuid())
	firstName String
	lastName String
	email String @unique
	password String
	phoneNo String
	branch String
	USN String @unique
	clubId String
	club Club @relation(fields:[clubId],references:[id],onDelete:Cascade)
}

model Club {
	id String @id @default(uuid())
	name String
	description String
	events Event[]
	bod BOD[]
	faculty String
	president String
	techLead String
	image String
}

model Event {
	id String @id @default(uuid())
	name String
	description String
	contact String
	link String
	points Int
	clubId String
	club Club @relation(fields:[clubId],references:[id],onDelete:Cascade)
	viewImage String
	downloadImage String

	participants Participation[]
}

model Participation{
	id String @id @default(uuid())
	eventId String
	studentId String
	event Event @relation(fields:[eventId],references:[id],onDelete:Cascade)
	student Student @relation(fields: [studentId], references: [id], onDelete: Cascade)
}
